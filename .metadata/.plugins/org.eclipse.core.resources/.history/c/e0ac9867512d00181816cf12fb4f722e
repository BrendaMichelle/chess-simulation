package chess;

public class Board {
	BoardCell[][] board = new BoardCell [8][8]; 
	
	public void initialize_board() {
		for(int i = 0; i < board.length; i++){
            for(int j = 0; j < board.length; j++){
                this.board[i][j] = new BoardCell();
            }
        }
	}
	
	//need to insert the other pieces still
	public void set_up_board() {
		//Piece a = new Piece (1, "bQ");
		board[0][3].piece = new Queen("black", "bQ");
		board[0][3].empty = false;
		board[0][4].piece = new King ("black", "bK");
		board[0][4].empty = false;
		board[7][3].piece = new Queen("white", "wQ");
		board[7][3].empty = false;
		board[7][4].piece = new King ("white", "wK");
		board[7][4].empty = false;
		
		for (int i = 0; i < 8; i++) { 
			board[1][i].piece = new Pawn("black", "bp"); //black pawns
			board[1][i].empty = false;
			board[6][i].piece = new Pawn("white", "wp"); //white pawns
			board[6][i].empty = false;
		 
		}	
	}
	
	public void print_board() {
		int [] arr = {1, 2, 3, 4, 5, 6, 7, 8}; //the row numbers
		char [] arrc = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'}; //the column letters
		
		for(int i = 0; i < board.length; i++){
			for(int j = 0; j < board.length; j++){
                if(board[i][j].empty) { 
                		if(((i%2 == 0) && (j%2 == 0)) || ((i%2 != 0) && (j%2 != 0 )))  {
                			System.out.print("   ");
                		}
                	if(((i%2 == 0) && (j%2 != 0 )) || ((i%2 != 0) && (j%2 == 0 )) ) {
    					System.out.print("## ");
    				}
    			}
    				else if (board[i][j].empty == false ) {
    					System.out.print(board[i][j].piece.piece_name + " ");
    				}
            }
			System.out.println(" " + arr[i]);
        }
		for(int i = 0; i < arrc.length; i++) {
			System.out.print(arrc[i] + "  ");
		}
	}

}
